#!/bin/bash

function usage() { echo "Usage: $0 [-d <duration in seconds>] [-u <number of concurrent users>] [-w <work rate - requests/second] [-n <kubernetes namespace from where to run the load injector] [-h <host name for /etc/hosts> ] [-i <ip address for /etc/hosts> ] [<target url> ]" 1>&2; exit 1; }

function loadTestExists?() {
    exists=`kubectl get pod -n $namespace|grep loadtest|cut -f 1 -d " "`
    if [ -z $exists ] ; then
        printf "false"
    else
        printf "true"
    fi
}

function isRunning?() {
    running=`kubectl get pod -n $namespace|grep loadtest|grep "Running"|cut -f 1 -d " "`
    if [ -z $running ] ; then
        printf "false"
    else
        printf "true"
    fi
}

duration=300
users=10
workRate=10
namespace=development
url=http://localhost:8080


while getopts ":d:u:w:n:h:i:" o; do
    case "${o}" in
        d)
            duration=${OPTARG}
            ;;
        u)
            users=${OPTARG}
            ;;
        w)
            workRate=${OPTARG}
            ;;
        n)
            namespace=${OPTARG}
            ;;
        h)
            host=${OPTARG}
            ;;
        i)
            ip=${OPTARG}
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

if [ ! -z "$1" ] ; then
    url=$1
fi

exist=`loadTestExists?`

if [ $exist = true ]; then
    echo "aborting existing load test, or cleaning up previous load test..."
    kubectl delete pod/loadtest
fi

echo "run load test in $namespace namespace with parameters:"
echo "  duration: $duration"
echo "  number of users: $users"
echo "  work rate (requests per second: $workRate"
echo "  url: $url"

if [ ! -z $host ] && [ ! -z $ip ] ; then
echo "  /etc/hosts -> $ip   $host"
fi

cat > ./.loadtest-pod.yaml <<EOF
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: loadtest
  name: loadtest
  namespace: development
spec:
  containers:
  - env:
    - name: DURATION
      value: "$duration"
    - name: NUM_USERS
      value: "$users"
    - name: REQUESTS_PER_SECOND
      value: "$workRate"
    - name: URL
      value: $url
    image: pivotaleducation/loadtest
    imagePullPolicy: Always
    name: loadtest
  restartPolicy: Never
EOF

if [ ! -z $host ] && [ ! -z $ip ] ; then
echo "  hostAliases:" >> ./.loadtest-pod.yaml
echo "  - ip: $ip" >> ./.loadtest-pod.yaml
echo "    hostnames:" >> ./.loadtest-pod.yaml
echo "    - \"$host\"" >> ./.loadtest-pod.yaml
fi

kubectl apply -f ./.loadtest-pod.yaml
rm ./.loadtest-pod.yaml

echo "waiting for pod/loadtest to start."

running=`isRunning?`
while [ $running = false ]; do
    printf "."
    sleep 1
    running=`isRunning?`
done
echo ""
echo ""

kubectl logs pod/loadtest -n $namespace -f